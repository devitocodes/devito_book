# Workflow for running verification tests from original textbook on Devito functions
name: Verification

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tutorials:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      DEVITO_ARCH: "${{ matrix.compiler }}"
      DEVITO_LANGUAGE: ${{ matrix.language }}
      DEVITO_BACKEND: "core"
      PYTHON_VERSION: "3.9"

    strategy:
      # Prevent all build to stop if a single one fails
      fail-fast: false
      matrix:
        name: [tutos-ubuntu-gcc-py39,
          tutos-osx-gcc-py39,
          tutos-osx-clang-py39]

        include:
          - name: tutos-ubuntu-gcc-py39
            os: ubuntu-latest
            compiler: gcc-9
            language: "openmp"

          - name: tutos-osx-gcc-py39
            os: macos-latest
            compiler: gcc-9
            language: "openmp"

          - name: tutos-osx-clang-py39
            os: macos-latest
            compiler: clang
            language: "C"

    steps:
    - name: Checkout devito_book
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install compilers for OSX
      if: runner.os == 'macOS'
      run: |
        if [ "${{ matrix.compiler }}" = "gcc-9" ]; then
          brew install gcc
        else
          sudo xcode-select -s /Applications/Xcode_11.app/Contents/Developer
        fi
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install matplotlib
    - name: Waves (2.1 to 2.5)
      run: |
        cd fdm-devito-notebooks/02_wave/src-wave/wave1D
        python -m pytest -s -v --cov . --cov-config=.coveragerc --cov-report=xml:waves_coverage.xml wave1D_u0.py::test_constant
    - name: Diffusion (3.7)
      run: |
        cd fdm-devito-notebooks/03_diffu/src-diffu
        python -m pytest -s -v --cov . --cov-config=.coveragerc --cov-report=xml:diffu_coverage.xml random_walk.py
     
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: ${{ matrix.name }}
        file: ./*_coverage.xml
        
